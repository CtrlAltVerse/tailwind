@import '../vendor/fortawesome/font-awesome/scss/_functions.scss';
$fa-font-path: 'https://use.fontawesome.com/releases/v6.7.2/webfonts' !default;
@import '../vendor/fortawesome/font-awesome/scss/_variables.scss';
@import '../vendor/fortawesome/font-awesome/scss/_mixins.scss';
@import '../vendor/fortawesome/font-awesome/scss/_core.scss';

// parcial: scss/solid.scss
.fas,
.#{$fa-css-prefix}-solid {
   font-weight: 900;
}

// scss/_sizing.scss
@for $i from 1 through 10 {
   @utility #{$fa-css-prefix}-#{$i}x {
      font-size: $i * 1em;
   }
}

@each $size, $value in $fa-sizes {
   @utility #{$fa-css-prefix}-#{$size} {
      @include fa-size($value);
   }
}

// scss/_fixed-width.scss
@utility #{$fa-css-prefix}-fw {
   text-align: center;
   width: $fa-fw-width;
}

// modded: scss/_list.scss
@utility #{$fa-css-prefix}-ul {
   list-style-type: none;
   margin-left: var(--#{$fa-css-prefix}-li-margin, #{$fa-li-margin});
   padding-left: 0;
}
.#{$fa-css-prefix}-ul > li {
   position: relative;
}

@utility #{$fa-css-prefix}-li {
   left: calc(-1 * var(--#{$fa-css-prefix}-li-width, #{$fa-li-width}));
   position: absolute;
   text-align: center;
   width: var(--#{$fa-css-prefix}-li-width, #{$fa-li-width});
   line-height: inherit;
}

// scss/_bordered-pulled.scss
@utility #{$fa-css-prefix}-border {
   border-color: var(--#{$fa-css-prefix}-border-color, #{$fa-border-color});
   border-radius: var(--#{$fa-css-prefix}-border-radius, #{$fa-border-radius});
   border-style: var(--#{$fa-css-prefix}-border-style, #{$fa-border-style});
   border-width: var(--#{$fa-css-prefix}-border-width, #{$fa-border-width});
   padding: var(--#{$fa-css-prefix}-border-padding, #{$fa-border-padding});
}

@utility #{$fa-css-prefix}-pull-left {
   float: left;
   margin-right: var(--#{$fa-css-prefix}-pull-margin, #{$fa-pull-margin});
}

@utility #{$fa-css-prefix}-pull-right {
   float: right;
   margin-left: var(--#{$fa-css-prefix}-pull-margin, #{$fa-pull-margin});
}

// scss/_animated.scss
@utility #{$fa-css-prefix}-beat {
   animation-name: #{$fa-css-prefix}-beat;
   animation-delay: var(--#{$fa-css-prefix}-animation-delay, 0s);
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 1s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(
      --#{$fa-css-prefix}-animation-timing,
      ease-in-out
   );
}

@utility #{$fa-css-prefix}-bounce {
   animation-name: #{$fa-css-prefix}-bounce;
   animation-delay: var(--#{$fa-css-prefix}-animation-delay, 0s);
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 1s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(
      --#{$fa-css-prefix}-animation-timing,
      cubic-bezier(0.28, 0.84, 0.42, 1)
   );
}

@utility #{$fa-css-prefix}-fade {
   animation-name: #{$fa-css-prefix}-fade;
   animation-delay: var(--#{$fa-css-prefix}-animation-delay, 0s);
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 1s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(
      --#{$fa-css-prefix}-animation-timing,
      cubic-bezier(0.4, 0, 0.6, 1)
   );
}

@utility #{$fa-css-prefix}-beat-fade {
   animation-name: #{$fa-css-prefix}-beat-fade;
   animation-delay: var(--#{$fa-css-prefix}-animation-delay, 0s);
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 1s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(
      --#{$fa-css-prefix}-animation-timing,
      cubic-bezier(0.4, 0, 0.6, 1)
   );
}

@utility #{$fa-css-prefix}-flip {
   animation-name: #{$fa-css-prefix}-flip;
   animation-delay: var(--#{$fa-css-prefix}-animation-delay, 0s);
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 1s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(
      --#{$fa-css-prefix}-animation-timing,
      ease-in-out
   );
}

@utility #{$fa-css-prefix}-shake {
   animation-name: #{$fa-css-prefix}-shake;
   animation-delay: var(--#{$fa-css-prefix}-animation-delay, 0s);
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 1s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(--#{$fa-css-prefix}-animation-timing, linear);
}

@utility #{$fa-css-prefix}-spin {
   animation-name: #{$fa-css-prefix}-spin;
   animation-delay: var(--#{$fa-css-prefix}-animation-delay, 0s);
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 2s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(--#{$fa-css-prefix}-animation-timing, linear);
}

@utility #{$fa-css-prefix}-spin-reverse {
   --#{$fa-css-prefix}-animation-direction: reverse;
}

@utility #{$fa-css-prefix}-spin-pulse {
   animation-name: #{$fa-css-prefix}-spin;
   animation-direction: var(--#{$fa-css-prefix}-animation-direction, normal);
   animation-duration: var(--#{$fa-css-prefix}-animation-duration, 1s);
   animation-iteration-count: var(
      --#{$fa-css-prefix}-animation-iteration-count,
      infinite
   );
   animation-timing-function: var(
      --#{$fa-css-prefix}-animation-timing,
      steps(8)
   );
}

@media (prefers-reduced-motion: reduce) {
   .#{$fa-css-prefix}-beat,
   .#{$fa-css-prefix}-bounce,
   .#{$fa-css-prefix}-fade,
   .#{$fa-css-prefix}-beat-fade,
   .#{$fa-css-prefix}-flip,
   .#{$fa-css-prefix}-pulse,
   .#{$fa-css-prefix}-shake,
   .#{$fa-css-prefix}-spin,
   .#{$fa-css-prefix}-spin-pulse {
      animation-delay: -1ms;
      animation-duration: 1ms;
      animation-iteration-count: 1;
      transition-delay: 0s;
      transition-duration: 0s;
   }
}

@keyframes #{$fa-css-prefix}-beat {
   0%,
   90% {
      transform: scale(1);
   }
   45% {
      transform: scale(var(--#{$fa-css-prefix}-beat-scale, 1.25));
   }
}

@keyframes #{$fa-css-prefix}-bounce {
   0% {
      transform: scale(1, 1) translateY(0);
   }
   10% {
      transform: scale(
            var(--#{$fa-css-prefix}-bounce-start-scale-x, 1.1),
            var(--#{$fa-css-prefix}-bounce-start-scale-y, 0.9)
         )
         translateY(0);
   }
   30% {
      transform: scale(
            var(--#{$fa-css-prefix}-bounce-jump-scale-x, 0.9),
            var(--#{$fa-css-prefix}-bounce-jump-scale-y, 1.1)
         )
         translateY(var(--#{$fa-css-prefix}-bounce-height, -0.5em));
   }
   50% {
      transform: scale(
            var(--#{$fa-css-prefix}-bounce-land-scale-x, 1.05),
            var(--#{$fa-css-prefix}-bounce-land-scale-y, 0.95)
         )
         translateY(0);
   }
   57% {
      transform: scale(1, 1)
         translateY(var(--#{$fa-css-prefix}-bounce-rebound, -0.125em));
   }
   64% {
      transform: scale(1, 1) translateY(0);
   }
   100% {
      transform: scale(1, 1) translateY(0);
   }
}

@keyframes #{$fa-css-prefix}-fade {
   50% {
      opacity: var(--#{$fa-css-prefix}-fade-opacity, 0.4);
   }
}

@keyframes #{$fa-css-prefix}-beat-fade {
   0%,
   100% {
      opacity: var(--#{$fa-css-prefix}-beat-fade-opacity, 0.4);
      transform: scale(1);
   }
   50% {
      opacity: 1;
      transform: scale(var(--#{$fa-css-prefix}-beat-fade-scale, 1.125));
   }
}

@keyframes #{$fa-css-prefix}-flip {
   50% {
      transform: rotate3d(
         var(--#{$fa-css-prefix}-flip-x, 0),
         var(--#{$fa-css-prefix}-flip-y, 1),
         var(--#{$fa-css-prefix}-flip-z, 0),
         var(--#{$fa-css-prefix}-flip-angle, -180deg)
      );
   }
}

@keyframes #{$fa-css-prefix}-shake {
   0% {
      transform: rotate(-15deg);
   }
   4% {
      transform: rotate(15deg);
   }
   8%,
   24% {
      transform: rotate(-18deg);
   }
   12%,
   28% {
      transform: rotate(18deg);
   }
   16% {
      transform: rotate(-22deg);
   }
   20% {
      transform: rotate(22deg);
   }
   32% {
      transform: rotate(-12deg);
   }
   36% {
      transform: rotate(12deg);
   }
   40%,
   100% {
      transform: rotate(0deg);
   }
}

@keyframes #{$fa-css-prefix}-spin {
   0% {
      transform: rotate(0deg);
   }
   100% {
      transform: rotate(360deg);
   }
}

// scss/_rotated-flipped.scss
@utility #{$fa-css-prefix}-rotate-90 {
   transform: rotate(90deg);
}

@utility #{$fa-css-prefix}-rotate-180 {
   transform: rotate(180deg);
}

@utility #{$fa-css-prefix}-rotate-270 {
   transform: rotate(270deg);
}

@utility #{$fa-css-prefix}-flip-horizontal {
   transform: scale(-1, 1);
}

@utility #{$fa-css-prefix}-flip-vertical {
   transform: scale(1, -1);
}

@utility #{$fa-css-prefix}-flip-both {
   transform: scale(-1, -1);
}

@utility #{$fa-css-prefix}-rotate-by {
   transform: rotate(var(--#{$fa-css-prefix}-rotate-angle, 0));
}

// scss/_stacked.scss
@utility #{$fa-css-prefix}-stack {
   display: inline-block;
   height: 2em;
   line-height: 2em;
   position: relative;
   vertical-align: $fa-stack-vertical-align;
   width: $fa-stack-width;
}

@utility #{$fa-css-prefix}-stack-1x {
   line-height: inherit;
   left: 0;
   position: absolute;
   text-align: center;
   width: 100%;
   z-index: var(--#{$fa-css-prefix}-stack-z-index, #{$fa-stack-z-index});
}

@utility #{$fa-css-prefix}-stack-2x {
   font-size: 2em;
   left: 0;
   position: absolute;
   text-align: center;
   width: 100%;
   z-index: var(--#{$fa-css-prefix}-stack-z-index, #{$fa-stack-z-index});
}

@utility #{$fa-css-prefix}-inverse {
   color: var(--#{$fa-css-prefix}-inverse, #{$fa-inverse});
}

// scss/_icons.scss
@each $name, $icon in $fa-icons {
   @utility #{$fa-css-prefix}-#{$name} {
      #{$fa-icon-property}: unquote('"#{ $icon }"');
   }
}

//scss/brands.scss
@each $name, $icon in $fa-brand-icons {
   @utility #{$fa-css-prefix}-#{$name} {
      #{$fa-icon-property}: unquote('"#{ $icon }"');
   }
}

// scss/_screen-reader.scss
.sr-only-focusable,
.#{$fa-css-prefix}-sr-only-focusable {
   @include fa-sr-only-focusable;
}

@font-face {
   font-family: 'Font Awesome 6 Free';
   font-style: normal;
   font-weight: 400;
   font-display: swap;
   src: url('#{$fa-font-path}/fa-regular-400.woff2') format('woff2'),
      url('#{$fa-font-path}/fa-regular-400.ttf') format('truetype');
}

@font-face {
   font-family: 'Font Awesome 6 Free';
   font-style: normal;
   font-weight: 900;
   font-display: swap;
   src: url('#{$fa-font-path}/fa-solid-900.woff2') format('woff2'),
      url('#{$fa-font-path}/fa-solid-900.ttf') format('truetype');
}

@font-face {
   font-family: 'Font Awesome 6 Brands';
   font-style: normal;
   font-weight: 400;
   font-display: swap;
   src: url('#{$fa-font-path}/fa-brands-400.woff2') format('woff2'),
      url('#{$fa-font-path}/fa-brands-400.ttf') format('truetype');
}
